[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introducción al Pipeline de Modelado",
    "section": "",
    "text": "Este sitio web demuestra un flujo de trabajo de modelado actuarial completo, desde el análisis exploratorio hasta la evaluación del impacto de negocio, utilizando datos telemáticos reales de una aseguradora canadiense.\nEl objetivo es comparar diferentes estrategias de modelado para encontrar el mejor enfoque que equilibre poder predictivo, interpretabilidad y robustez.\n\nFlujo de Trabajo del Proyecto\nEl análisis sigue un orden lógico a través de las pestañas del menú:\n\n1. Ingeniería de Características\nLas variables telemáticas puras (ej. aceleraciones a 6, 8, 9 mph/s) suelen estar altamente correlacionadas entre sí. En esta página, aplicamos ‘Ingeniería de Características’ para agrupar estas variables granulares en conceptos de negocio más interpretables y robustos, como total_eventos_frenado o intensidad_total_giro. Los mapas de calor demuestran visualmente cómo este proceso reduce la multicolinealidad.\n\n\n2. Selección de Variables\nNo todas las características que creamos serán igual de importantes. En esta sección, utilizamos dos potentes algoritmos de Machine Learning para que seleccionen automáticamente el subconjunto más relevante de nuestras nuevas características ingenieriles: * Elastic Net: Un modelo de regresión que selecciona variables y maneja bien la correlación. * XGBoost: Un modelo de boosting que clasifica las variables por importancia.\n\n\n3. Pipeline GLM\nAquí construimos y evaluamos un Modelo Lineal Generalizado (GLM), el estándar de la industria por su alta interpretabilidad. El modelo final combina las variables demográficas con las características telemáticas seleccionadas en el paso anterior. Analizamos sus coeficientes, diagnósticos y resultados de negocio.\n\n\n4. Pipeline GAM\nEn esta sección, exploramos una alternativa más flexible al GLM: un Modelo Aditivo Generalizado (GAM). Los GAMs son capaces de capturar relaciones no lineales complejas entre las variables (como la edad) y el riesgo, lo que potencialmente puede llevar a un modelo más preciso. También construimos, diagnosticamos y evaluamos este modelo.\n\n\n5. Comparativa Final\nEsta es la pestaña final y más importante, donde se cuantifica el valor de cada estrategia. Comparamos directamente el rendimiento del mejor modelo GLM contra el mejor modelo GAM usando métricas clave: * Poder Predictivo (Lift Chart): ¿Qué modelo es mejor para segmentar el riesgo? * Impacto Financiero: ¿Qué modelo genera una estructura de primas más rentable y justa? * Criterios Estadísticos (AIC/BIC): ¿Qué modelo ofrece el mejor balance entre ajuste y simplicidad?\nEste flujo de trabajo completo nos permite tomar una decisión informada y basada en evidencia sobre qué modelo es el más adecuado para los objetivos del negocio.\n\n#rsconnect::writeManifest()"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "1. Ingeniería de Características",
    "section": "",
    "text": "En esta etapa inicial, cargamos los datos, los limpiamos y, lo más importante, aplicamos ingeniería de características para transformar las variables telemáticas granulares en predictores más significativos y robustos.\n\nCarga y Limpieza de Datos\n\n# Cargar todas las librerías necesarias para el proyecto\ninstall.packages(\"pacman\")\n\nThe following package(s) will be installed:\n- pacman [0.5.1]\nThese packages will be installed into \"C:/Users/Angel/Downloads/QuartoAngel/TarificacionTelematica/renv/library/windows/R-4.5/x86_64-w64-mingw32\".\n\n# Installing packages --------------------------------------------------------\n- Installing pacman ...                         OK [linked from cache]\nSuccessfully installed 1 package in 8.1 milliseconds.\n\ninstall.packages(\"xts\")\n\nThe following package(s) will be installed:\n- xts [0.14.1]\nThese packages will be installed into \"C:/Users/Angel/Downloads/QuartoAngel/TarificacionTelematica/renv/library/windows/R-4.5/x86_64-w64-mingw32\".\n\n# Installing packages --------------------------------------------------------\n- Installing xts ...                            OK [linked from cache]\nSuccessfully installed 1 package in 8.7 milliseconds.\n\ninstall.packages(\"CASdatasets\", repos = \"http://dutangc.free.fr/pub/RRepos/pub/\", type=\"source\")\n\nThe following package(s) will be installed:\n- CASdatasets [1.2-0]\nThese packages will be installed into \"C:/Users/Angel/Downloads/QuartoAngel/TarificacionTelematica/renv/library/windows/R-4.5/x86_64-w64-mingw32\".\n\n# Installing packages --------------------------------------------------------\n- Installing CASdatasets ...                    OK [linked from cache]\nSuccessfully installed 1 package in 6.8 milliseconds.\n\npacman::p_load(dplyr, ggplot2, tidyr, forcats, scales, janitor, corrplot, glmnet, xgboost, mgcv, DT,CASdatasets)\n\n\n# Cargar y limpiar datos\ndata(catelematic13)\nbase_data &lt;- catelematic13 %&gt;%\n  janitor::clean_names() %&gt;% \n  filter(total_miles_driven &gt; 0, car_age &gt;= 0) %&gt;% \n  mutate(across(where(is.character), as.factor))\n\n\n\nCreación de Variables Agregadas\nAgrupamos variables que miden conceptos similares para reducir la dimensionalidad y mejorar la interpretabilidad.\n\nengineered_data &lt;- base_data %&gt;%\n  mutate(\n    # Agrupar eventos de aceleración\n    total_accel_events = rowSums(select(., starts_with(\"accel_\")), na.rm = TRUE),\n    # Agrupar eventos de frenado\n    total_brake_events = rowSums(select(., starts_with(\"brake_\")), na.rm = TRUE),\n    # Agrupar intensidad de giros\n    total_turn_intensity = rowSums(select(., starts_with(\"left_turn_\"), starts_with(\"right_turn_\")), na.rm = TRUE),\n    # Agrupar uso en horas pico\n    pct_drive_rush_total = pct_drive_rush_am + pct_drive_rush_pm,\n  ) %&gt;%\n  # Seleccionar las variables finales para el modelado\n  select(\n    # Variables clave\n    nb_claim, amt_claim, total_miles_driven,\n    # Variables demográficas\n    insured_age, insured_sex, car_age, marital, region, car_use,\n    # Nuevas características ingenieriles\n    total_accel_events, total_brake_events, total_turn_intensity,\n    pct_drive_rush_total, pct_drive_wkday, avgdays_week, annual_pct_driven\n  )\n\n# Guardamos los datos para usarlos en las siguientes páginas\nsaveRDS(engineered_data, \"engineered_data.rds\")\n\n\n\nAnálisis de Correlación\nLos mapas de calor nos permiten visualizar el éxito de nuestra ingeniería de características.\n\n# Correlación de Originales\ntelematic_originals &lt;- base_data %&gt;% select(starts_with(\"accel_\"), starts_with(\"brake_\"), starts_with(\"pct_drive\"))\ncorr_matrix_orig &lt;- cor(telematic_originals, use = \"pairwise.complete.obs\")\ncolors &lt;- colorRampPalette(c(\"#4299E1\", \"white\", \"#F56565\"))(200)\ncorrplot(corr_matrix_orig, method = \"color\", type = \"upper\", order = \"hclust\", col = colors,\n         tl.col = \"black\", tl.srt = 45, tl.cex = 0.8, title = \"Correlación de Variables Originales\", mar=c(0,0,1,0))\n\n\n\n\n\n\n\n# Correlación de Nuevas Características\nengineered_features &lt;- engineered_data %&gt;% select(starts_with(\"total_\"), starts_with(\"pct_drive_\"), starts_with(\"avgdays\"), starts_with(\"annual_pct\"))\ncorr_matrix_eng &lt;- cor(engineered_features, use = \"pairwise.complete.obs\")\ncolors_eng &lt;- colorRampPalette(c(\"#48BB78\", \"white\", \"#F6AD55\"))(200)\ncorrplot(corr_matrix_eng, method = \"color\", type = \"upper\", order = \"hclust\", col = colors_eng,\n         tl.col = \"black\", tl.srt = 45, tl.cex = 0.9, addCoef.col = \"black\", number.cex = 0.7, title = \"\\n\\nCorrelación de Características Ingenieriles\", mar=c(0,0,1,0))\n\n\n\n\n\n\n\n\nNotamos que los bloques de alta correlación en el primer gráfico han desaparecido en el segundo, indicando que nuestras nuevas variables son mucho más independientes entre sí."
  }
]